/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Airliner.Airliner;
import Business.Travel.customerDirectory;
import Business.Users.Customer;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phapa
 */
public class CustomerHomePanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerHomePanel
     */
    private JPanel containerPanel;
    private customerDirectory customerDirectory;

    public CustomerHomePanel(JPanel containerPanel, customerDirectory customerDirectory) {
        initComponents();
        this.containerPanel = containerPanel;
        this.customerDirectory = customerDirectory;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) tblCustomerDirectory.getModel();
        dtm.setRowCount(0);
        for (Customer customer : customerDirectory.getCustomerList()) {
            //System.out.println(ar.getFleet().getLstAirplane().size());
            Object[] row = new Object[2];

            row[0] = customer;
            row[1] = customer.getCustomerName();
            dtm.addRow(row);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerDirectory = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnViewBookingHistory = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer Directory");

        tblCustomerDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomerDirectory);
        if (tblCustomerDirectory.getColumnModel().getColumnCount() > 0) {
            tblCustomerDirectory.getColumnModel().getColumn(0).setResizable(false);
            tblCustomerDirectory.getColumnModel().getColumn(1).setResizable(false);
        }

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnViewBookingHistory.setText("Booking History");
        btnViewBookingHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBookingHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnViewBookingHistory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addComponent(btnViewBookingHistory))
                .addContainerGap(381, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        CustomerAdd_Update cap = new CustomerAdd_Update(this.containerPanel, this.customerDirectory, null, "CREATE");
        this.containerPanel.add("CustomerAdd_Update", cap);
        CardLayout layout = (CardLayout) this.containerPanel.getLayout();
        layout.next(this.containerPanel);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.tblCustomerDirectory.getSelectedRow();
        if (selectedRow >= 0) {
            this.customerDirectory.getCustomerList().remove((Customer) this.tblCustomerDirectory.getValueAt(selectedRow, 0));
            JOptionPane.showMessageDialog(null, "Customer removed.");
            populate();
        } else {
            JOptionPane.showMessageDialog(null, "Please select customer to be deleted.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = this.tblCustomerDirectory.getSelectedRow();
        if (selectedRow >= 0) {
            CustomerAdd_Update cup = new CustomerAdd_Update(this.containerPanel, this.customerDirectory, (Customer) this.tblCustomerDirectory.getValueAt(selectedRow, 0), "UPDATE");
            this.containerPanel.add("CustomerAdd_Update", cup);
            CardLayout layout = (CardLayout) this.containerPanel.getLayout();
            layout.next(this.containerPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select customer to be updated.");
        }


    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewBookingHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBookingHistoryActionPerformed
        int selectedRow = this.tblCustomerDirectory.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select customer.");
            return;
        } else {
            BookingHistoryPanel bookingHistoryPanel = new BookingHistoryPanel(containerPanel,(Customer) this.tblCustomerDirectory.getValueAt(selectedRow, 0));
            containerPanel.add("BookingHistoryPanel", bookingHistoryPanel);
            CardLayout layout = (CardLayout) containerPanel.getLayout();
            layout.next(containerPanel);
        }

    }//GEN-LAST:event_btnViewBookingHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewBookingHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomerDirectory;
    // End of variables declaration//GEN-END:variables
}
