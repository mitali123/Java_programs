/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Airliner.Airliner;
import Business.Airliner.AirlinerDirectory;
import javax.swing.JPanel;
import Business.Airliner.Flight;
import Business.Airliner.Airplane;
import Business.Airliner.FlightSchedule;
import Business.config;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author manja
 */
public class newFlightPanel extends javax.swing.JPanel {

    private JPanel containerPanel;
    private AirlinerDirectory airlineDirectory;
    private String Airlinerselected;
    private FlightSchedule fs;
    private Flight f;
    private String typeOfOperation;

    /**
     * Creates new form newFlightPanel
     */
    public newFlightPanel(JPanel containerPanel, AirlinerDirectory airlineDirectory, Flight f, String typeOfOperation) {
        initComponents();
        this.containerPanel = containerPanel;
        this.airlineDirectory = airlineDirectory;
        for (Airliner air : airlineDirectory.getLstAirliner()) {
            comboairliner.addItem(air.getAirlinerName());
        }
        this.typeOfOperation = typeOfOperation;
        if (this.typeOfOperation.equalsIgnoreCase("UPDATE")) {
            this.f = f;
            lblHeader.setText("UPDATE");
            comboairliner.setSelectedItem(this.f.getAirlinerName());
            comboairliner.setSelectedItem(this.f.getAirplane().getModel());
            txtcost.setText(String.valueOf(this.f.getCost()));
            txtduration.setText(String.valueOf(this.f.getDuration()));
            txtstartloc.setText(this.f.getStartLocation());
            txtendlocation.setText(this.f.getEndLocation());
            Calendar c = Calendar.getInstance();
            c.setTime(this.f.getStartTime());
            cmbSYear.setSelectedItem(String.valueOf(c.get(Calendar.YEAR)));
            cmbSMonth.setSelectedItem(String.valueOf(c.get(Calendar.MONTH)));
            cmbSDay.setSelectedItem(String.valueOf(c.get(Calendar.DAY_OF_MONTH)));
            cmbSHour.setSelectedItem(String.valueOf(c.get(Calendar.HOUR_OF_DAY)));
            cmbSMin.setSelectedItem(String.valueOf(c.get(Calendar.MINUTE)));
            c.setTime(this.f.getEndTime());
            cmbEYear.setSelectedItem(String.valueOf(c.get(Calendar.YEAR)));
            cmbEMonth.setSelectedItem(String.valueOf(c.get(Calendar.MONTH)));
            cmbEDay.setSelectedItem(String.valueOf(c.get(Calendar.DAY_OF_MONTH)));
            cmbEHour.setSelectedItem(String.valueOf(c.get(Calendar.HOUR_OF_DAY)));
            cmbEMin.setSelectedItem(String.valueOf(c.get(Calendar.MINUTE)));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtstartloc = new javax.swing.JTextField();
        txtendlocation = new javax.swing.JTextField();
        txtduration = new javax.swing.JTextField();
        comboairplane = new javax.swing.JComboBox<>();
        btnsubmit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtcost = new javax.swing.JTextField();
        comboairliner = new javax.swing.JComboBox<>();
        cmbSYear = new javax.swing.JComboBox<>();
        cmbSMonth = new javax.swing.JComboBox<>();
        cmbSDay = new javax.swing.JComboBox<>();
        cmbSHour = new javax.swing.JComboBox<>();
        cmbSMin = new javax.swing.JComboBox<>();
        cmbEYear = new javax.swing.JComboBox<>();
        cmbEMonth = new javax.swing.JComboBox<>();
        cmbEDay = new javax.swing.JComboBox<>();
        cmbEHour = new javax.swing.JComboBox<>();
        cmbEMin = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();

        lblHeader.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Add New Flight");

        jLabel2.setText("Please Enter the Airliner Name:");

        jLabel3.setText("Please select the airplane to be assigned:");

        jLabel4.setText("Please Enter the End Time:");

        jLabel5.setText("Please Enter the Start Time:");

        jLabel6.setText("Please Enter the Start Location:");

        jLabel7.setText("Please Enter the End Location:");

        jLabel8.setText("Please Enter the Flight Duration:");

        btnsubmit.setText("SUBMIT");
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });

        jLabel9.setText("Please Enter the Cost:");

        comboairliner.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboairlinerItemStateChanged(evt);
            }
        });

        cmbSYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "2019", "2020", "2021", "2022", "2023" }));

        cmbSMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cmbSDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbSHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HH", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        cmbSMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        cmbEYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "2019", "2020", "2021", "2022", "2023" }));

        cmbEMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cmbEDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbEHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HH", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        cmbEMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(124, 124, 124)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtduration, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtstartloc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(comboairplane, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboairliner, javax.swing.GroupLayout.Alignment.LEADING, 0, 180, Short.MAX_VALUE)
                                .addComponent(txtendlocation, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtcost)))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboairliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboairplane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbSYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstartloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtendlocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtduration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(429, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        // TODO add your handling code here:

        Airlinerselected = comboairliner.getSelectedItem().toString();
        String Model = comboairplane.getSelectedItem().toString();
        String startDate = cmbSYear.getSelectedItem().toString() + "-" + cmbSMonth.getSelectedItem().toString() + "-" + cmbSDay.getSelectedItem().toString() + " "
                + cmbSHour.getSelectedItem().toString() + ":" + cmbSMin.getSelectedItem().toString() + ":00";
        String endDate = cmbEYear.getSelectedItem().toString() + "-" + cmbEMonth.getSelectedItem().toString() + "-" + cmbEDay.getSelectedItem().toString() + " "
                + cmbEHour.getSelectedItem().toString() + ":" + cmbEMin.getSelectedItem().toString() + ":00";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
        try {
            if (simpleDateFormat.parse(startDate).after(simpleDateFormat.parse(endDate))) {
                JOptionPane.showMessageDialog(null, "Start date should be before end date.");
                return;
            } else if (!Pattern.matches("[0-9]+(\\.){0,1}[0-9]*", txtduration.getText()) || !Pattern.matches("[0-9]+(\\.){0,1}[0-9]*", txtcost.getText())
                    || txtstartloc.getText().trim().equals("") || txtendlocation.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter valid entries.");
                return;
            } else {
                for (Airliner airliner : airlineDirectory.getLstAirliner()) {

                    if (airliner.getAirlinerName().equalsIgnoreCase(Airlinerselected)) {
                        this.fs = airliner.getFlightSchedule();
                        for (Airplane airplane : airliner.getFleet().getLstAirplane()) {
                            if (airplane.getModel().equals(Model)) {
                                if (this.typeOfOperation.equalsIgnoreCase("CREATE")) {
                                    f = fs.addFlight();
                                }
                                f.setDuration(Double.parseDouble(txtduration.getText()));
                                f.setAirlinerName(Airlinerselected);
                                f.setCost(Double.parseDouble(txtcost.getText()));
                                f.setEndLocation(txtendlocation.getText());
                                f.setStartLocation(txtstartloc.getText());

                                Date sDate = new Date();
                                Date eDate = new Date();
                                Date afternoon = new Date();
                                Date evening = new Date();
                                Date night = new Date();

                                try {
                                    sDate = simpleDateFormat.parse(startDate);
                                    eDate = simpleDateFormat.parse(endDate);
                                    afternoon = timeFormat.parse("12:00:00");
                                    evening = timeFormat.parse("16:00:00");
                                    night = timeFormat.parse("20:00:00");
                                } catch (ParseException ex) {
                                    Logger.getLogger(config.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                f.setStartTime(sDate);
                                f.setEndTime(eDate);
                                DateFormat df = new SimpleDateFormat("HHmmss");
                                if (df.format(sDate).compareTo(df.format(afternoon)) < 0) {
                                    f.setFlightTiming(Flight.flightTime.MORNING);
                                } else if (df.format(sDate).compareTo(df.format(evening)) < 0) {
                                    f.setFlightTiming(Flight.flightTime.AFTERNOON);
                                } else if (df.format(sDate).compareTo(df.format(night)) < 0) {
                                    f.setFlightTiming(Flight.flightTime.EVENING);
                                } else {
                                    f.setFlightTiming(Flight.flightTime.NIGHT);
                                }

                                f.setAirplane(airplane);
                                airplane.setIsAvailable(false);
                                JOptionPane.showMessageDialog(null, "Flight Added Successfully.");
                                return;
                            }
                        }
                    }
                }
            }
        } catch (Exception ex) {

        }

    }//GEN-LAST:event_btnsubmitActionPerformed

    private void comboairlinerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboairlinerItemStateChanged
        Airlinerselected = comboairliner.getSelectedItem().toString();
        for (Airliner airliner : airlineDirectory.getLstAirliner()) {

            if (airliner.getAirlinerName().equalsIgnoreCase(Airlinerselected)) {

                for (Airplane airplane : airliner.getFleet().getLstAirplane()) {
                    if (airplane.getIsAvailable().equals(true)) {
                        comboairplane.addItem(airplane.getModel());
                    }
                }
            }
        }
        if (comboairplane.getItemCount() <= 0) {
            JOptionPane.showMessageDialog(null, "No airplane available. Select another airliner");
            btnsubmit.setEnabled(false);
        } else {
            btnsubmit.setEnabled(true);
        }
    }//GEN-LAST:event_comboairlinerItemStateChanged

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.containerPanel.remove(this);
        CardLayout layout = (CardLayout) this.containerPanel.getLayout();

        Component[] comps = this.containerPanel.getComponents();
        for (Component comp : comps) {
            if (comp instanceof manageFlightsPanel) {
                manageFlightsPanel mf = (manageFlightsPanel) comp;
                mf.populateTable();
            }
        }
        layout.previous(containerPanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JComboBox<String> cmbEDay;
    private javax.swing.JComboBox<String> cmbEHour;
    private javax.swing.JComboBox<String> cmbEMin;
    private javax.swing.JComboBox<String> cmbEMonth;
    private javax.swing.JComboBox<String> cmbEYear;
    private javax.swing.JComboBox<String> cmbSDay;
    private javax.swing.JComboBox<String> cmbSHour;
    private javax.swing.JComboBox<String> cmbSMin;
    private javax.swing.JComboBox<String> cmbSMonth;
    private javax.swing.JComboBox<String> cmbSYear;
    private javax.swing.JComboBox<String> comboairliner;
    private javax.swing.JComboBox<String> comboairplane;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTextField txtcost;
    private javax.swing.JTextField txtduration;
    private javax.swing.JTextField txtendlocation;
    private javax.swing.JTextField txtstartloc;
    // End of variables declaration//GEN-END:variables
}
