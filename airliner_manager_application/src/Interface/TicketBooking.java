/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Airliner.Flight;
import Business.Travel.Seat;
import Business.Travel.Ticket;
import Business.Travel.customerDirectory;
import Business.Users.Customer;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.ScrollPane;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;

/**
 *
 * @author manja
 */
public class TicketBooking extends javax.swing.JPanel {

    /**
     * Creates new form newuserPanel
     */
    private JPanel containerPanel;
    private Flight flight;
    private customerDirectory custDir;
    private Customer cus1;
    private String from;
    private JList lstCustomer;
    private List<Seat> lstSeats;

    public TicketBooking(JPanel containerPanel, Flight flight, customerDirectory custDir, String from) {
        initComponents();
        this.lstSeats = new ArrayList<>();
        this.containerPanel = containerPanel;
        this.flight = flight;
        this.custDir = custDir;
        this.from = from;
        for (int i = 1; i <= this.flight.getAirplane().getSeats().size(); i++) {
            this.cmbSeatRow.addItem(String.valueOf(i));
        }

        this.lblNumberTickets.setVisible(false);
        this.txtNoOfTickets.setVisible(false);
        this.lblSelectCustomers.setVisible(false);
        this.btnCustomerdropdown.setVisible(false);
        if (this.from.equalsIgnoreCase("Admin")) {
            this.lstCustomer = new JList();
            loadFilterList();
            this.lblPassangerName.setVisible(false);
            this.lblRow.setVisible(false);
            this.txtPassangerName.setVisible(false);
            this.cmbSeatRow.setVisible(false);
            this.lblRow.setVisible(false);
            this.cmbSeatRow.setVisible(false);
            this.lblSelectPreference.setVisible(false);
            this.lblSelectSeat.setVisible(false);
            this.cmbSeatPreference.setVisible(false);
            this.cmbSeat.setVisible(false);
            this.lblNumberTickets.setVisible(true);
            this.txtNoOfTickets.setVisible(true);
            this.lblSelectCustomers.setVisible(true);
            this.btnCustomerdropdown.setVisible(true);
        }
        assignValuestoLables();

    }

    private void loadFilterList() {
        //Setting brand filter list
        List<Object> customers = this.custDir.getCustomerList().stream().map(x -> x.getUserName()).collect(Collectors.toList());
        setListModel(customers, this.lstCustomer);
    }

    private void setListModel(List<Object> data, JList list) {
        DefaultListModel dlm = new DefaultListModel();
        for (Object item : data) {
            dlm.addElement(item);
        }
        list.setModel(dlm);
    }

    private void assignValuestoLables() {
        this.lblAirlinerName.setText(this.flight.getAirlinerName());
        this.lblDuration.setText(String.valueOf(this.flight.getDuration()));
        this.lblFrom.setText(this.flight.getStartLocation());
        this.lblTo.setText(this.flight.getEndLocation());
        this.lblSeatsAvailable.setText(String.valueOf(this.flight.getAirplane().getSeats().stream().filter(x -> x.getIsAvailable()).count()));
        this.lblTime.setText(this.flight.getStartTime().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblAirlinerName = new javax.swing.JLabel();
        lblFrom = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();
        lblDuration = new javax.swing.JLabel();
        lblSeatsAvailable = new javax.swing.JLabel();
        lblPassangerName = new javax.swing.JLabel();
        txtPassangerName = new javax.swing.JTextField();
        lblRow = new javax.swing.JLabel();
        cmbSeatRow = new javax.swing.JComboBox<>();
        btnConfirmBooking = new javax.swing.JButton();
        lblNumberTickets = new javax.swing.JLabel();
        lblSelectCustomers = new javax.swing.JLabel();
        txtNoOfTickets = new javax.swing.JTextField();
        btnCustomerdropdown = new javax.swing.JButton();
        lblSelectPreference = new javax.swing.JLabel();
        cmbSeatPreference = new javax.swing.JComboBox<>();
        lblSelectSeat = new javax.swing.JLabel();
        cmbSeat = new javax.swing.JComboBox<>();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Booking");

        jLabel3.setText("Airliner Name:");

        jLabel4.setText("From:");

        jLabel5.setText("Time:");

        jLabel6.setText("To:");

        jLabel7.setText("Duration:");

        jLabel8.setText("Seats Available:");

        lblPassangerName.setText("Passanger Name:");

        lblRow.setText("Select Row:");

        cmbSeatRow.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeatRowItemStateChanged(evt);
            }
        });

        btnConfirmBooking.setText("Confirm");
        btnConfirmBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmBookingActionPerformed(evt);
            }
        });

        lblNumberTickets.setText("No of tickets to Booked:");

        lblSelectCustomers.setText("Select Customers:");

        btnCustomerdropdown.setText("Select");
        btnCustomerdropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerdropdownActionPerformed(evt);
            }
        });

        lblSelectPreference.setText("Select Preference:");

        cmbSeatPreference.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ANY", "WINDOW", "MIDDLE", "AISLE" }));
        cmbSeatPreference.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeatPreferenceItemStateChanged(evt);
            }
        });

        lblSelectSeat.setText("Select Seat:");

        cmbSeat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeatItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConfirmBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(294, 294, 294)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(94, 94, 94)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblSeatsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblPassangerName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPassangerName, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(155, 155, 155)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblNumberTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblSelectCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnCustomerdropdown, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                        .addComponent(txtNoOfTickets)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(94, 94, 94)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblRow, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSelectPreference, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSelectSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbSeatRow, 0, 211, Short.MAX_VALUE)
                                .addComponent(cmbSeatPreference, 0, 211, Short.MAX_VALUE)
                                .addComponent(cmbSeat, 0, 211, Short.MAX_VALUE)))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeatsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumberTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoOfTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSelectCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCustomerdropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassangerName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassangerName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSeatRow, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRow, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectPreference, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSeatPreference, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmBookingActionPerformed
        if (this.from.equalsIgnoreCase("admin")) {
            int noOfTickets = 0;
            try {
                noOfTickets = Integer.parseInt(this.txtNoOfTickets.getText());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Please enter integer values.");
                return;
            }
            if (noOfTickets == this.lstCustomer.getSelectedValuesList().toArray().length) {
                Object[] customerObject = this.lstCustomer.getSelectedValuesList().toArray();
                if (customerObject.length > 0) {
                    List<Customer> customersToBeAssigned = this.custDir.getCustomerList().stream().filter(x -> Arrays.asList(customerObject).contains(x.getUserName())).collect(Collectors.toCollection(ArrayList::new));
                    for (Customer c : customersToBeAssigned) {
                        Seat seat = this.flight.getAirplane().getSeats().stream().filter(x -> x.getIsAvailable() == true).findFirst().orElse(new Seat());
                        if (seat.getIsAvailable() == null) {
                            JOptionPane.showMessageDialog(null, " seats are not available check other seat flights");
                            return;
                        } else {
                            seat.setIsAvailable(false);
                        }
                        Ticket ticket = new Ticket();
                        ticket.setFlightDate(flight.getStartTime());
                        ticket.setFrom(flight.getStartLocation());
                        ticket.setTo(flight.getEndLocation());
                        ticket.setSeatNo(seat);
                        ticket.setPassengerName(c.getCustomerName());
                        ticket.setAirlinerName(flight.getAirlinerName());
                        Date date = new Date();
                        ticket.setCreatedDate(date);
                        c.getLstTicket().add(ticket);
                    }
                    JOptionPane.showMessageDialog(null, "Booking Successful.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select " + noOfTickets + " customers from dropdown.");
                return;
            }

        } else {
            if (this.txtPassangerName.getText().equals("") || this.txtPassangerName == null) {
                JOptionPane.showMessageDialog(null, "Please enter valid Passanger Name");
                return;
            }
            Seat seat;
            seat = this.flight.getAirplane().getSeats().stream().filter(x -> String.valueOf(x.getSeatNo()).equalsIgnoreCase(this.cmbSeat.getSelectedItem().toString())).findFirst().orElse(new Seat());
            seat.setIsAvailable(false);
            Ticket ticket = new Ticket();
            ticket.setFlightDate(flight.getStartTime());
            ticket.setFrom(flight.getStartLocation());
            ticket.setTo(flight.getEndLocation());
            ticket.setSeatNo(seat);
            ticket.setPassengerName(txtPassangerName.getText());
            ticket.setAirlinerName(flight.getAirlinerName());
            Date date = new Date();
            ticket.setCreatedDate(date);
            for (Customer activeCustomer : custDir.getCustomerList()) {
                if (activeCustomer.getIsActive() != null && activeCustomer.getIsActive().equals(true)) {
                    activeCustomer.getLstTicket().add(ticket);
                    break;
                }
            }
            JOptionPane.showMessageDialog(null, "Ticked Booked. View Under Booking History or Book Another Ticket.");
//            TicketPanel tp = new TicketPanel(containerPanel, custDir, ticket, flight);
//            containerPanel.add("TicketPanel", tp);
//            CardLayout layout = (CardLayout) containerPanel.getLayout();
//            layout.next(containerPanel);
        }
    }//GEN-LAST:event_btnConfirmBookingActionPerformed
    private void loadDropDown(JList list, JButton btn) {
        ScrollPane scp = new ScrollPane();
        scp.setBounds(0, 0, 200, 120);
        //TODO remove horizontal scroll bar 
        final JPopupMenu menu = new JPopupMenu("Menu");
        scp.add(list);
        menu.add(scp);
        menu.setVisible(true);
        btn.setComponentPopupMenu(menu);
        menu.pack();
        Point pos = new Point();
        Dimension size = menu.getPreferredSize();
        pos.x = (btn.getWidth());
        pos.y = (btn.getHeight());
        menu.show(btn, 0, pos.y);
    }
    private void btnCustomerdropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerdropdownActionPerformed

        loadDropDown(this.lstCustomer, this.btnCustomerdropdown);
    }//GEN-LAST:event_btnCustomerdropdownActionPerformed
    private void fetchAvailableSeats() {
        List<Seat> temp = new ArrayList<>();

        if (this.cmbSeatPreference.getSelectedItem().toString().equalsIgnoreCase("MIDDLE")) {
            temp = this.lstSeats.stream().filter(x -> x.getSeatDetails().equals(Seat.seatType.MIDDLE)).collect(Collectors.toList());
        } else if (this.cmbSeatPreference.getSelectedItem().toString().equalsIgnoreCase("WINDOW")) {
            temp = this.lstSeats.stream().filter(x -> x.getSeatDetails().equals(Seat.seatType.WINDOW)).collect(Collectors.toList());
        } else if (this.cmbSeatPreference.getSelectedItem().toString().equalsIgnoreCase("AISLE")) {
            temp = this.lstSeats.stream().filter(x -> x.getSeatDetails().equals(Seat.seatType.AISLE)).collect(Collectors.toList());
        } else {
            for (Seat s : lstSeats) {
                temp.add(s);
            }
        }

        temp = temp.stream().filter(x -> x.getIsAvailable().equals(true)).collect(Collectors.toList());
        if (this.lstSeats.size() < 1) {
            JOptionPane.showMessageDialog(null, "No seat available for above combination");
        } else {
            this.cmbSeat.removeAllItems();
            for (Seat s : temp) {

                this.cmbSeat.addItem(String.valueOf(s.getSeatNo()));
            }
        }

    }
    private void cmbSeatRowItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeatRowItemStateChanged
        if (this.cmbSeatRow.getSelectedItem().toString().equalsIgnoreCase("Select")) {
            return;
        }
        if (this.lstSeats != null) {
            this.lstSeats.clear();
        }

        this.lstSeats.add(this.flight.getAirplane().getSeats().get(this.cmbSeatRow.getSelectedIndex() * 6 + 0));
        this.lstSeats.add(this.flight.getAirplane().getSeats().get(this.cmbSeatRow.getSelectedIndex() * 6 + 1));
        this.lstSeats.add(this.flight.getAirplane().getSeats().get(this.cmbSeatRow.getSelectedIndex() * 6 + 2));
        this.lstSeats.add(this.flight.getAirplane().getSeats().get(this.cmbSeatRow.getSelectedIndex() * 6 + 3));
        this.lstSeats.add(this.flight.getAirplane().getSeats().get(this.cmbSeatRow.getSelectedIndex() * 6 + 4));
        this.lstSeats.add(this.flight.getAirplane().getSeats().get(this.cmbSeatRow.getSelectedIndex() * 6 + 5));

        fetchAvailableSeats();

    }//GEN-LAST:event_cmbSeatRowItemStateChanged

    private void cmbSeatPreferenceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeatPreferenceItemStateChanged
        fetchAvailableSeats();
    }//GEN-LAST:event_cmbSeatPreferenceItemStateChanged

    private void cmbSeatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeatItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSeatItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmBooking;
    private javax.swing.JButton btnCustomerdropdown;
    private javax.swing.JComboBox<String> cmbSeat;
    private javax.swing.JComboBox<String> cmbSeatPreference;
    private javax.swing.JComboBox<String> cmbSeatRow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblAirlinerName;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblNumberTickets;
    private javax.swing.JLabel lblPassangerName;
    private javax.swing.JLabel lblRow;
    private javax.swing.JLabel lblSeatsAvailable;
    private javax.swing.JLabel lblSelectCustomers;
    private javax.swing.JLabel lblSelectPreference;
    private javax.swing.JLabel lblSelectSeat;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTo;
    private javax.swing.JTextField txtNoOfTickets;
    private javax.swing.JTextField txtPassangerName;
    // End of variables declaration//GEN-END:variables
}
